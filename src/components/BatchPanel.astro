---
---

<div id="batch-mode-content" class="hidden">
  <div class="grid lg:grid-cols-2 gap-8">
    <!-- Left: Upload & Controls -->
    <div class="space-y-6">
      <div class="bg-white rounded-xl shadow-lg p-6">
        <h2 class="text-2xl font-semibold text-gray-800 mb-4">📦 Batch Certificate Generation</h2>
        
        <!-- JSON Upload -->
        <div class="border-2 border-dashed border-gray-300 rounded-lg p-8 text-center hover:border-blue-400 transition mb-4">
          <input type="file" id="json-upload" accept=".json" class="hidden" />
          <label for="json-upload" class="cursor-pointer">
            <div class="text-4xl mb-3">📄</div>
            <p class="text-gray-600 mb-2">Click to upload JSON file</p>
            <p class="text-sm text-gray-500">or drag and drop</p>
          </label>
        </div>

        <div id="json-status" class="text-sm text-center hidden mb-4"></div>

        <button id="download-sample-json" class="w-full px-4 py-3 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition font-medium mb-4">
          📄 Download Sample JSON Template
        </button>
      </div>

      <!-- Signatures for Batch -->
      <div class="bg-white rounded-xl shadow-lg p-6">
        <h2 class="text-xl font-semibold text-gray-800 mb-4">✍️ E-Signatures (Apply to All)</h2>
        <div class="space-y-4">
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Dean Signature</label>
            <input type="file" id="batch-dean-signature" accept="image/*" class="w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100" />
          </div>
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Organizer Signature</label>
            <input type="file" id="batch-organizer-signature" accept="image/*" class="w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-lg file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100" />
          </div>
        </div>
      </div>

      <!-- Progress -->
      <div id="batch-progress-section" class="bg-white rounded-xl shadow-lg p-6 hidden">
        <h3 class="text-lg font-semibold text-gray-800 mb-3">Progress</h3>
        <div class="w-full bg-gray-200 rounded-full h-4 mb-2">
          <div id="progress-bar" class="bg-blue-600 h-4 rounded-full transition-all" style="width: 0%"></div>
        </div>
        <p class="text-sm text-gray-600 text-center">
          <span id="progress-text">Preparing...</span>
          <span id="progress-count" class="font-semibold ml-2"></span>
        </p>
      </div>

      <!-- Generate Button -->
      <div class="bg-white rounded-xl shadow-lg p-6">
        <button id="batch-generate-btn" disabled class="w-full px-12 py-4 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition font-bold shadow-lg text-lg disabled:bg-gray-400 disabled:cursor-not-allowed">
          🚀 Generate All Certificates
        </button>
      </div>
    </div>

    <!-- Right: Participants Table -->
    <div class="bg-white rounded-xl shadow-lg p-6">
      <h2 class="text-2xl font-semibold text-gray-800 mb-4">📋 Participants List</h2>
      <div id="participants-table-container" class="overflow-auto max-h-[600px]">
        <p class="text-gray-500 text-center py-8">No participants loaded yet. Upload a JSON file to see the list.</p>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const jsonUpload = document.getElementById('json-upload') as HTMLInputElement;
    const tableContainer = document.getElementById('participants-table-container') as HTMLDivElement;

    jsonUpload?.addEventListener('change', (e) => {
      const file = (e.target as HTMLInputElement).files?.[0];
      if (!file) return;

      const reader = new FileReader();
      reader.onload = (event) => {
        try {
          const data = JSON.parse(event.target?.result as string);
          const participants = data.participants;

          if (!Array.isArray(participants) || participants.length === 0) {
            throw new Error('Invalid data');
          }

          // Build table with email and category
          let tableHTML = `
            <table class="w-full text-sm">
              <thead class="bg-gray-100 sticky top-0">
                <tr>
                  <th class="px-3 py-2 text-left">#</th>
                  <th class="px-3 py-2 text-left">Name</th>
                  <th class="px-3 py-2 text-left">Email</th>
                  <th class="px-3 py-2 text-left">Category</th>
                  <th class="px-3 py-2 text-left">Seminar</th>
                  <th class="px-3 py-2 text-left">Date</th>
                </tr>
              </thead>
              <tbody class="divide-y">
          `;

          participants.forEach((p: any, i: number) => {
            tableHTML += `
              <tr class="hover:bg-gray-50">
                <td class="px-3 py-2">${i + 1}</td>
                <td class="px-3 py-2 font-medium">${p.name}</td>
                <td class="px-3 py-2 text-xs text-gray-600">${p.email || 'N/A'}</td>
                <td class="px-3 py-2">
                  <span class="px-2 py-1 bg-blue-100 text-blue-800 rounded text-xs font-medium">${p.category || 'N/A'}</span>
                </td>
                <td class="px-3 py-2">${p.seminarTitle}</td>
                <td class="px-3 py-2 text-gray-600">${p.eventDate}</td>
              </tr>
            `;
          });

          tableHTML += '</tbody></table>';
          tableContainer.innerHTML = tableHTML;

        } catch (error) {
          tableContainer.innerHTML = '<p class="text-red-500 text-center py-8">Invalid JSON format. Please check your file.</p>';
        }
      };
      reader.readAsText(file);
    });
  });
</script>