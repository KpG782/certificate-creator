---
// filepath: src/pages/event/attend.astro
import jwt from 'jsonwebtoken';

const token = Astro.url.searchParams.get('token');
const JWT_SECRET = import.meta.env.JWT_SECRET || 'fallback-secret-change-in-production';

if (!token) {
  return Astro.redirect('/dashboard?error=missing_token');
}

// Verify token server-side
let eventData;
let isExpired = false;
let isInvalid = false;

try {
  eventData = jwt.verify(token, JWT_SECRET);
  console.log('✅ Token verified:', eventData);
} catch (error) {
  console.error('❌ Token verification failed:', error);
  
  if (error instanceof jwt.TokenExpiredError) {
    isExpired = true;
    // Try to decode expired token to show event name
    try {
      eventData = jwt.decode(token);
    } catch (decodeError) {
      isInvalid = true;
    }
  } else {
    isInvalid = true;
  }
}

if (isInvalid) {
  return Astro.redirect('/dashboard?error=invalid_token');
}
---

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Event Attendance - {eventData.event_name || 'Unknown Event'}</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script src="https://unpkg.com/lucide@latest"></script>
</head>
<body class="bg-gradient-to-br from-blue-500 to-purple-600 min-h-screen flex items-center justify-center p-4">
  <div class="bg-white rounded-2xl shadow-2xl max-w-md w-full p-8">
    {isExpired ? (
      <!-- Expired Event -->
      <div class="text-center">
        <div class="w-20 h-20 mx-auto mb-6 bg-red-100 rounded-full flex items-center justify-center">
          <i data-lucide="clock-x" class="w-10 h-10 text-red-600"></i>
        </div>
        <h1 class="text-2xl font-bold text-gray-800 mb-2">
          Registration Closed
        </h1>
        <p class="text-gray-600 mb-4">
          This event's registration period has ended.
        </p>
        <p class="text-sm text-gray-500">
          Event: <strong>{eventData.event_name}</strong>
        </p>
      </div>
    ) : (
      <!-- Active Event -->
      <div class="text-center">
        <div class="w-20 h-20 mx-auto mb-6 bg-blue-100 rounded-full flex items-center justify-center">
          <i data-lucide="calendar-check" class="w-10 h-10 text-blue-600"></i>
        </div>

        <h1 class="text-2xl font-bold text-gray-800 mb-2">
          {eventData.event_name}
        </h1>

        <div class="bg-gray-50 rounded-lg p-4 mb-6 text-left">
          <p class="text-sm text-gray-700 mb-2 flex items-center gap-2">
            <i data-lucide="calendar" class="w-4 h-4"></i>
            <strong>Event ID:</strong> {eventData.event_id}
          </p>
          {eventData.iat && (
            <p class="text-xs text-gray-500">
              Created: {new Date(eventData.iat * 1000).toLocaleString()}
            </p>
          )}
        </div>

        <p class="text-gray-600 mb-6">
          Click below to mark your attendance
        </p>

        <button 
          id="attendBtn"
          class="w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 px-6 rounded-lg transition duration-200 flex items-center justify-center shadow-lg"
        >
          <i data-lucide="user-check" class="w-5 h-5 mr-2"></i>
          Mark Attendance
        </button>

        <p class="text-xs text-gray-500 mt-4 flex items-center justify-center gap-1">
          <i data-lucide="shield-check" class="w-3 h-3"></i>
          You'll be asked to log in with your UMak account
        </p>

        <div id="statusMessage" class="hidden mt-4"></div>
      </div>
    )}
  </div>

  <script define:vars={{ eventData, token, isExpired }}>
    if (typeof lucide !== 'undefined') {
      lucide.createIcons();
    }

    if (!isExpired) {
      document.getElementById('attendBtn')?.addEventListener('click', async () => {
        const btn = document.getElementById('attendBtn');
        const statusMsg = document.getElementById('statusMessage');
        
        if (!btn || !statusMsg) return;

        btn.disabled = true;
        btn.innerHTML = '<i data-lucide="loader" class="w-5 h-5 mr-2 animate-spin"></i>Processing...';
        lucide.createIcons();

        try {
          const attendanceKey = `attendance_${eventData.event_id}`;
          const existingAttendance = localStorage.getItem(attendanceKey);
          
          if (existingAttendance) {
            statusMsg.className = 'mt-4 bg-yellow-50 border border-yellow-200 text-yellow-800 px-4 py-3 rounded-lg text-sm';
            statusMsg.innerHTML = `
              <div class="flex items-center gap-2">
                <i data-lucide="alert-circle" class="w-4 h-4"></i>
                <span>You've already marked attendance for this event!</span>
              </div>
              <p class="text-xs mt-1">Marked at: ${new Date(existingAttendance).toLocaleString()}</p>
            `;
            statusMsg.classList.remove('hidden');
          } else {
            const timestamp = new Date().toISOString();
            localStorage.setItem(attendanceKey, timestamp);
            
            statusMsg.className = 'mt-4 bg-green-50 border border-green-200 text-green-800 px-4 py-3 rounded-lg text-sm';
            statusMsg.innerHTML = `
              <div class="flex items-center gap-2">
                <i data-lucide="check-circle" class="w-4 h-4"></i>
                <span><strong>Attendance Marked Successfully!</strong></span>
              </div>
              <p class="text-xs mt-2">Next steps:</p>
              <ol class="text-xs list-decimal list-inside mt-1 space-y-1">
                <li>Attend the full event</li>
                <li>Complete the evaluation form (sent after event)</li>
                <li>Receive your certificate via email</li>
              </ol>
            `;
            statusMsg.classList.remove('hidden');
          }

          btn.innerHTML = '<i data-lucide="check" class="w-5 h-5 mr-2"></i>Checked In';
          btn.classList.remove('bg-blue-600', 'hover:bg-blue-700');
          btn.classList.add('bg-green-600');
          
        } catch (error) {
          console.error('Attendance marking failed:', error);
          statusMsg.className = 'mt-4 bg-red-50 border border-red-200 text-red-800 px-4 py-3 rounded-lg text-sm';
          statusMsg.innerHTML = `
            <div class="flex items-center gap-2">
              <i data-lucide="x-circle" class="w-4 h-4"></i>
              <span>Failed to mark attendance. Please try again.</span>
            </div>
          `;
          statusMsg.classList.remove('hidden');
          
          btn.disabled = false;
          btn.innerHTML = '<i data-lucide="user-check" class="w-5 h-5 mr-2"></i>Mark Attendance';
        }

        lucide.createIcons();
      });
    }
  </script>
</body>
</html>